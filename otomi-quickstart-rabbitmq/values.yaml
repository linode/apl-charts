# Default values for otomi-quickstart-rabbitmq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2Gi
  # requests:
  #   cpu: 1000m
  #   memory: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}
# !Warning: If spec is removed, then the rabbitmqCluster won't be created!
# if you want to check all spec options, please check the rabbitmqCluster crd
# https://github.com/rabbitmq/cluster-operator/blob/main/config/crd/bases/rabbitmq.com_rabbitmqclusters.yaml
rabbitmqCluster:
  spec:
    # affinity:
    #   nodeAffinity: {}
    #   podAffinity: {}
    #   podAntiAffinity: {}
    delayStartSeconds: 30
  #   override: {}
    persistence:
      storage: 10Gi
      # storageClassName: {}
  #   rabbitmq: {}
    replicas: 3
    resources:
      limits:
        cpu: '2'
        memory: 2Gi
      requests:
        cpu: '1'
        memory: 1Gi
  #   secretBackend:
  #     externalSecret: {}
    terminationGracePeriodSeconds: 604800

# !Warning: If you rename already deployed queues, ArgoCD will try to remove it
# if you want to check all spec options, please check the queue crd
# https://github.com/rabbitmq/messaging-topology-operator/blob/main/config/crd/bases/rabbitmq.com_queues.yaml
# By default the queue is of type 'classic'
queues:
  - name: "my-queue1"
    # If you want to use a queue of type 'quorum', you have to set durable to true
    # spec:
    #     durable: true
    #     arguments:
    #         x-queue-type: quorum
    # If you want to use a queue of type 'stream', you have to set durable to true
    # spec:
    #     durable: true
    #     arguments:
    #         x-queue-type: stream
