# Default values for rabbitmq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""

## @param fullnameOverride String to fully override deployment.fullname template
## Used by Otomi to set the name for all resources based on the workload name
##
fullnameOverride: ""

## @param monitoring Will create a PodMonitor and metrics will be scraped by the team Prometheus
## Requires Managed prometheus and alert manager Enabled for the Team
## @param dashboard Will add a ConfigMap with a Grafana dashboard for CloudNativePG
##
monitoring: true
dashboard: true

## Prometheus Operator ServiceMonitor configuration
##
serviceMonitor:
  ## @param serviceMonitor.create Creates a Prometheus Operator ServiceMonitor
  ## The service monitor is configured to use the private team Prometheus instance
  ##
  create: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Optionally specify an array of imagePullSecrets. Only use when deploying images from external registries
## When images are deployed from local Harbor registry, pull secrets are already added to the service account
## Secrets must be manually created in the namespace.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
## E.g.:
## imagePullSecrets:
##   - myRegistryKeySecretName
##
imagePullSecrets: []

## @param annotations Annotations for pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1000
  # readOnlyRootFilesystem: true

## Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # fsGroup: 2000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 2000m
  #   memory: 2Gi
  # requests:
  #   cpu: 1000m
  #   memory: 2Gi

## @param nodeSelector Node labels for pod assignment.
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

# !Warning: If spec is removed, then the rabbitmqCluster won't be created!
# if you want to check all spec options, please see the rabbitmqCluster crd
# https://github.com/rabbitmq/cluster-operator/blob/main/config/crd/bases/rabbitmq.com_rabbitmqclusters.yaml
rabbitmqCluster:
  spec:
    # affinity:
      # nodeAffinity: {}
      # podAffinity: {}
      # podAntiAffinity: {}
    delayStartSeconds: 30
    # override: {}
    persistence:
      storage: 10Gi
      # storageClassName: {}
    # rabbitmq: {}
    replicas: 3
    resources:
      limits:
        cpu: '1'
        memory: 2Gi
      requests:
        cpu: '1'
        memory: 2Gi
    # secretBackend:
      # externalSecret: {}
    terminationGracePeriodSeconds: 604800

    # 'rabbitmq_prometheus'
plugins: []

# !Warning: If you rename already deployed queues, ArgoCD will try to remove it
# if you want to check all spec options, please check the queue crd
# https://github.com/rabbitmq/messaging-topology-operator/blob/main/config/crd/bases/rabbitmq.com_queues.yaml
# By default the queue is of type 'classic'
queues: []
  # - name: "my-queue1"
    # If you want to use a queue of type 'quorum', you have to set durable to true
    # spec:
      # durable: true
      # arguments:
        # x-queue-type: quorum
    # If you want to use a queue of type 'stream', you have to set durable to true
    # spec:
      # durable: true
      # arguments:
        # x-queue-type: stream

policies: []
  # - name: "my-policy1"
    # pattern: ".*"
    # definition: # Check the readme Optional parameters: Queue Policy definitions for all definitions
      # dead-letter-exchange: "cc"
      # ha-mode: "all"
    # spec:
      # applyTo: "queues" # Default: 'all' - Options: 'queues', 'classic_queues', 'quorum_queues', 'streams', 'exchanges', or 'all'
      # priority: {}    # Default: 0
      # vhost: {}       # Default: /