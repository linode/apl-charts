# Default values for rabbitmq.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""

## @param fullnameOverride String to fully override deployment.fullname template
## Used by Otomi to set the name for all resources based on the workload name
##
fullnameOverride: ""

## @param monitoring Will create a PodMonitor and metrics will be scraped by the team Prometheus
## Requires Managed prometheus and alert manager Enabled for the Team
## @param dashboard Will add a ConfigMap with a Grafana dashboard for CloudNativePG
##
monitoring: false
dashboard: false

## Prometheus Operator ServiceMonitor configuration
##
serviceMonitor:
  ## @param serviceMonitor.create Creates a Prometheus Operator ServiceMonitor
  ## The service monitor is configured to use the private team Prometheus instance
  ##
  create: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Image is the name of the RabbitMQ docker image to use for RabbitMQ nodes in
# the RabbitmqCluster. Must be provided together with ImagePullSecrets in
# order to use an image in a private registry.
# image: ""

# List of Secret resource containing access credentials to the registry for
# the RabbitMQ image. Required if the docker registry is private.
imagePullSecrets: []

## @param annotations Annotations for pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  seccompProfile:
    type: RuntimeDefault

## Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
containerSecurityContext:
  capabilities:
    drop:
      - ALL
  allowPrivilegeEscalation: false
  # Note that the RabbitMQ image used by the operator may not support setting fsGroup to
  # a non-root (> 0) value.

resources:
  limits:
    cpu: '1'
    memory: 2Gi
  requests:
    cpu: '1'
    memory: 2Gi

## @param nodeSelector Node labels for pod assignment.
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

# DelayStartSeconds is the time the init container (`setup-container`) will
# sleep before terminating. This effectively delays the time between starting
# the Pod and starting the `rabbitmq` container. RabbitMQ relies on up-to-date
# DNS entries early during peer discovery. The purpose of this artificial
# delay is to ensure that DNS entries are up-to-date when booting RabbitMQ.
# For more information, see
# https://github.com/kubernetes/kubernetes/issues/92559 If your Kubernetes DNS
# backend is configured with a low DNS cache value or publishes not ready
# addresses promptly, you can decrase this value or set it to 0.
delayStartSeconds: 30

# The desired persistent storage configuration for each Pod in the cluster.
persistence:
  storage: 10Gi
  # storageClassName: {}

# Replicas is the number of nodes in the RabbitMQ cluster. Each node is
# deployed as a Replica in a StatefulSet. Only 1, 3, 5 replicas clusters are
# tested. This value should be an odd number to ensure the resultant cluster
# can establish exactly one quorum of nodes in the event of a fragmenting
# network partition.
# Scaling down of an existing cluster is not supported
replicaCount: 3

# Secret backend configuration for the RabbitmqCluster. Enables to fetch
# default user credentials and certificates from K8s external secret stores.
# secretBackend: 
#   externalSecret: {}

# The desired state of the Kubernetes Service to create for the cluster.
# service: {}

# If unset, or set to false, the cluster will run `rabbitmq-queues rebalance
# all` whenever the cluster is updated. Set to true to prevent the operator
# rebalancing queue leaders after a cluster update. Has no effect if the
# cluster only consists of one node. For more information, see
# https://www.rabbitmq.com/rabbitmq-queues.8.html#rebalance
skipPostDeploySteps: false

#  TerminationGracePeriodSeconds is the timeout that each rabbitmqcluster pod
#  will have to terminate gracefully. It defaults to 604800 seconds ( a week
#  long) to ensure that the container preStop lifecycle hook can finish
#  running. For more information, see:
#  https://github.com/rabbitmq/cluster-operator/blob/main/docs/design/20200520-graceful-pod-termination.md
terminationGracePeriodSeconds: 604800

# TLS-related configuration for the RabbitMQ cluster.
# tls: {}

# Here you can add plugins that you want to enable for the rabbitmq cluster 
# See a complete list at: https://www.rabbitmq.com/docs/plugins#tier1-plugins
plugins: []
# - rabbitmq_mqtt 
# - rabbitmq_federation 
# - rabbitmq_federation_management

# !Warning: If you rename already deployed queues, ArgoCD will try to remove it
# if you want to check all spec options, please check the queue crd
# https://github.com/rabbitmq/messaging-topology-operator/blob/main/config/crd/bases/rabbitmq.com_queues.yaml
# By default the queue is of type 'classic'
queues: []
  # - name: "my-queue1"
    # If you want to use a queue of type 'quorum', you have to set durable to true
    # spec:
      # durable: true
      # arguments:
        # x-queue-type: quorum
    # If you want to use a queue of type 'stream', you have to set durable to true
    # spec:
      # durable: true
      # arguments:
        # x-queue-type: stream

# if you want to check all spec options, please check the policy crd
# https://github.com/rabbitmq/messaging-topology-operator/blob/main/config/crd/bases/rabbitmq.com_policies.yaml
policies: []
  # - name: "my-policy1"
    # pattern: ".*"
    # definition: # Check the readme Optional parameters: Queue Policy definitions for all definitions
      # dead-letter-exchange: "cc"
      # ha-mode: "all"
    # spec:
      # applyTo: "queues" # Default: 'all' - Options: 'queues', 'classic_queues', 'quorum_queues', 'streams', 'exchanges', or 'all'
      # priority: {}    # Default: 0
      # vhost: {}       # Default: /

# Modify to add to the rabbitmq.conf file in addition to default
# configurations set by the operator. Modifying this property on an existing
# RabbitmqCluster will trigger a StatefulSet rolling restart and will cause
# rabbitmq downtime. For more information on this config, see
# https://www.rabbitmq.com/configure.html#config-file
additionalConfig: ""

# Specify any rabbitmq advanced.config configurations to apply to the cluster.
# For more information on advanced config, see
# https://www.rabbitmq.com/configure.html#advanced-config-file
advancedConfig: ""

# Modify to add to the rabbitmq-env.conf file. Modifying this property on an
# existing RabbitmqCluster will trigger a StatefulSet rolling restart and will
# cause rabbitmq downtime. For more information on env config, see
# https://www.rabbitmq.com/man/rabbitmq-env.conf.5.html
envConfig: ""
