## @param fullnameOverride String to fully override deployment.fullname template
## Used by Otomi to set the name for all resources based on the workload name
##
fullnameOverride: ""

versionOne:
  ## @param image.repository your v1 image repository
  ## @param image.tag image tag (immutable tags are recommended)
  ## @param image.pullPolicy image pull policy
  ##
  image:
    repository: ""
    pullPolicy: IfNotPresent
    tag: ""
  ## @param replicaCount Number of replicas to deploy
  ##
  replicaCount: 1
  ## Autoscaling parameters
  ## @param autoscaling.enabled Enable autoscaling for deployment
  ## @param autoscaling.minReplicas Minimum number of replicas to scale back
  ## @param autoscaling.maxReplicas Maximum number of replicas to scale out
  ## @param autoscaling.targetCPU Target CPU utilization percentage
  ## @param autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPU: 80
    targetMemory: 80
  ## configmap parameters
  ## @param configmap.create Creates a Configmap and mounts it to the Pod
  ## @param mountPath Path to mount the configmap to
  ## @param data Key value pairs stored in the configmap
  configmap:
    create: false
    mountPath: /etc/config
    data: {}
      # SPECIAL_LEVEL: very
      # SPECIAL_TYPE: charm
  ## @param secrets Set secrets as container environment variables using a secretRef
  ##
  secrets: []
    # - mysecret

  ## Command and args for running the container (set to default if not set). Use array form
  ## @param command Override default container command (useful when using custom images)
  ## @param args Override default container args (useful when using custom images)
  ##
  command: []
  args: []
    # - --metric-name=custom_prometheus
    # - --metric-value=40
    # - --port=8080
  ## @param env Environment variables for containers
  ##
  env: []
    # - name: TARGET
    #   value: VALUE

versionTwo:
  ## @param image.repository your v2 image repository
  ## @param image.tag image tag (immutable tags are recommended)
  image:
    repository: ""
    pullPolicy: IfNotPresent
    tag: ""
  ## @param replicaCount Number of replicas to deploy
  ##
  replicaCount: 1
  ## Autoscaling parameters
  ## @param autoscaling.enabled Enable autoscaling for deployment
  ## @param autoscaling.minReplicas Minimum number of replicas to scale back
  ## @param autoscaling.maxReplicas Maximum number of replicas to scale out
  ## @param autoscaling.targetCPU Target CPU utilization percentage
  ## @param autoscaling.targetMemory Target Memory utilization percentage
  ##
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPU: 80
    targetMemory: 80
  ## configmap parameters
  ## @param configmap.create Creates a Configmap and mounts it to the Pod
  ## @param mountPath Path to mount the configmap to
  ## @param data Key value pairs stored in the configmap
  configmap:
    create: false
    mountPath: /etc/config
    data: {}
      # SPECIAL_LEVEL: very
      # SPECIAL_TYPE: charm
  ## @param secrets Set secrets as container environment variables using a secretRef
  ##
  secrets: []
    # - mysecret

  ## Command and args for running the container (set to default if not set). Use array form
  ## @param command Override default container command (useful when using custom images)
  ## @param args Override default container args (useful when using custom images)
  ##
  command: []
  args: []
    # - --metric-name=custom_prometheus
    # - --metric-value=40
    # - --port=8080
  ## @param env Environment variables for containers
  ##
  env: []
    # - name: TARGET
    #   value: VALUE

## Generic values

## @param annotations Annotations for pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## @param labels Additional labels for all resources
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
commonLabels: {}

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## A service account with the name of the workload will always be created.
##
serviceAccount:
  ## @param serviceAccount.annotations Annotations for service account.
  ##
  annotations: {}
  ## Optionally specify an array of imagePullSecrets. Only use when deploying images from external registries
  ## When images are deployed from local Harbor registry, pull secrets are already added to the service account
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## E.g.:
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []

## Pod liveness probe.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe: {}

## Pod readiness probe.
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
readinessProbe:
  httpGet:
    path: /
    port: http

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1000
  # readOnlyRootFilesystem: true

## Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # fsGroup: 2000

## Configures the container ports to listens on
##
containerPorts:
  - name: http
    containerPort: 8080
    protocol: TCP

## Configures the service ports to listens on. Exposes on port 80 by default, using the http port of the pod.
##
servicePorts:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http

## Containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## You can change default resource request in the workload values. This increases the chance the charts will run on environments with little
## resources, such as Minikube.
## @param resources.limits The resources limits for the container
## @param resources.requests The requested resources for the container
##
resources:
  limits:
     cpu: 500m
     memory: 1Gi
  requests:
     cpu: 200m
     memory: 32Mi

## @param nodeSelector Node labels for pod assignment.
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## @param tolerations Tolerations for pod assignment.
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## @param affinity Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## @param VolumeMounts A list of volume mounts to be added to the pod
##
volumeMounts: []
  # - name: my-secret
  #   mountPath: /secrets
  #   readOnly: true
  # - mountPath: /tmp
  #   name: tmp
  # - name: config-volume
  #   mountPath: /etc/config

## @param Volumes A list of volumes to be added to the pod
##
volumes: []
  # - name: my-secret
  #   secret:
  #     secretName: my-secret
  # - name: tmp
  #   emptyDir: {}
  # - name: config-volume
  #   configMap:
  #     name: special-config

## Prometheus Operator ServiceMonitor configuration
##
serviceMonitor:
  ## @param serviceMonitor.create Creates a Prometheus Operator ServiceMonitor
  ## The service monitor is configured to use the private team Prometheus instance
  ##
  create: false
  ## @param serviceMonitor.endPoints Configure the endpoints for the service monitor
  ## The service monitor is configured to use the private team Prometheus instance
  ## See: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#podmetricsendpoint
  endpoints: []
    # - port: metrics
    #   path: /metrics