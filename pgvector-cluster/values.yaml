## @param fullnameOverride String to fully override deployment.fullname template
## Used by APL to set the name for all resources based on the workload name
##
fullnameOverride: ''

## @param instances Number of instances required in the cluster
## default set to 3 for optimal vector database performance
instances: 2

## @param imageName Fully qualified image name for the PostgreSQL container
## When set, this takes precedence over the `imageCatalogRef` parameter.
## Use this to specify an exact container image for deployment.
## Set to `null` if `imageCatalogRef` should be used instead.
imageName: null

## @param imageCatalogRef Reference to a ClusterImageCatalog resource for PostgreSQL
## Specifies the catalog reference for resolving the PostgreSQL container image.
## Ignored if `imageName` is set.
## Use this to dynamically resolve the image based on the catalog. More info: https://cloudnative-pg.io/documentation/1.24/image_catalog/
imageCatalogRef:
  apiGroup: postgresql.cnpg.io
  kind: ClusterImageCatalog
  name: platform
  major: 17

# @param primaryUpdateStrategy Rolling update strategy
# Select between unsupervised (automated update of the primary once all
# replicas have been upgraded) or supervised (requires manual supervision to perform
# the switchover of the primary).
primaryUpdateStrategy: unsupervised

## @param storage Configuration of the storage for PostgreSQL database data
## @param storageClass StorageClass to use for database data.
## If not specified, generated PVCs will be satisfied by the default storage class.
## @param size Size of the storage. Required if not already specified in the PVC template.
## Changes to this field are automatically reapplied to the created PVCs.
## Size cannot be decreased.
## For vector workloads, consider larger storage sizes due to vector index requirements.
##
storage:
  storageClass: ''
  size: 1Gi

## @param walStorage Configuration of the storage for PostgreSQL WAL (Write-Ahead Log)
## @param storageClass StorageClass to use for the WAL.
## If not specified, generated PVCs will be satisfied by the default storage class.
## @param size Size of the WAL storage. Required if not already specified in the PVC template.
## Changes to this field are automatically reapplied to the created PVCs.
## Size cannot be decreased.
walStorage:
  storageClass: ''
  size: 1Gi

## @param postgresql PostgreSQL configuration parameters optimized for vector workloads
## These parameters are tuned for better performance with pgvector operations
postgresql:
  parameters:
    # Connection settings
    max_connections: "200"

    # Memory settings optimized for vector operations
    shared_buffers: "256MB"
    effective_cache_size: "1GB"
    maintenance_work_mem: "256MB"  # Increased for vector index building
    work_mem: "64MB"               # Increased for vector operations

    # Checkpoint and WAL settings
    checkpoint_completion_target: "0.9"
    wal_buffers: "16MB"

    # Query planning
    default_statistics_target: "100"
    random_page_cost: "1.1"
    effective_io_concurrency: "200"

    # Vector-specific optimizations
    max_parallel_workers_per_gather: "4"
    max_parallel_workers: "8"

## @param monitoring Will create a PodMonitor and metrics will be scraped by the team Prometheus
## Requires Managed prometheus and alert manager Enabled for the Team
## @param dashboard Will add a ConfigMap with a Grafana dashboard for CloudNativePG
##
monitoring: false
dashboard: false

## @param databases Configuration for databases with vector extensions
## @param name Database name
## @param owner Database owner (defaults to 'app')
## @param extensions List of PostgreSQL extensions to install
## Multiple databases can be defined, each with their own extension requirements
##
databases:
  - name: app  # Use 'app' to match the default database CloudNativePG creates
    owner: app
    extensions:
      - vector                # pgvector for AI/ML workloads
      - pg_stat_statements   # Query performance monitoring

## @param byoSuperUserSecret BYO secret for super admin credentials
## @param enabled Set to true to use a BYO secret
## @param The name of the secret containing the super admin credentials
##
byoSuperUserSecret:
  enabled: false
  name: ''

## @param bootstrap Initialize a new PostgreSQL cluster (default)
## ref: https://cloudnative-pg.io/documentation/1.20/bootstrap/ for more information
## @param dataChecksums Whether the -k option should be passed to initdb
## enabling checksums on data pages (default: false)
##
bootstrap:
  initdb:
    dataChecksums: false

## Containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## These are increased defaults optimized for vector database workloads
## @param resources.limits The resources limits for the container
## @param resources.requests The requested resources for the container
##
resources:
  limits:
    cpu: "1"
    memory: 1Gi
  requests:
    cpu: 200m
    memory: 256Mi

## @param networkpolicies Create network policies for the PostgreSQL deployment
## @param create Set to true to create network policies
##
apl:
  networkpolicies:
    create: true
